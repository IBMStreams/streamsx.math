namespace com.ibm.streamsx.functions;

/*
 * Return the a list containing the log(x) value of each elements of the input list
 */
public list<float64> logList(list<float64> inputList){
	mutable list<float64> result=[];
	for(float64 f in inputList){
		appendM(result,log(f));
	}
	return result;
}

/*
 * return a list that contains the euclidian distance between input values : (abs(list2[x]-list1[x])
 */
public list<float64> euclidianDistance(list<float64> list1,list<float64> list2){
	mutable list<float64> result=[];
	int32 sz=size(list1)>=size(list2)?size(list2):size(list1);
	mutable int32 index=0;
	mutable float64 val;
	while(index < sz){
		val=abs(list2[index]-list1[index]);
		if(!isNaN(val)){
			appendM(result,val);
		}
		index++;
	}
	return result;
}
