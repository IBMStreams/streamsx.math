use com.ibm.streamsx.math.common::*;

public composite Main {
	graph
		() as Performer = Custom() {
			logic
				onProcess: {
					//<norm>list<list<float64>> x   = [[0.0, 1.0, 2.0], [ 3.0, 4.0, 5.0]];
					//<f1>list<list<float64>>   x   = [[0.0, 1.0, 2.0], [ 3.0, 4.0, 5.0, 6.0]];
					
					//<norm>boolean expecr = true;
					//<f*>boolean expecr = false;
					mutable int32 rows = 0;
					mutable int32 columns = 0;
					boolean r = getMatrixDimension(x, rows, columns);
					
					printStringLn("x=" + (rstring)x);
					printStringLn("getMatrixDimension returns " + (rstring)r + " rows=" + (rstring)rows + " columns=" + (rstring)columns);
					printStringLn("expecr =" + (rstring)expecr);
					if (r != expecr) abort();
					if (r) {
						if (rows != 2) abort();
						if (columns != 3) abort();
					}
					printStringLn("End of sample");
				}
		}

	config restartable: false;
}
